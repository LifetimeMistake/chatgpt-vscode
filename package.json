{
  "name": "chatgpt-vscode",
  "publisher": "lifetimemistake",
  "displayName": "GPT VSCode",
  "icon": "images/ai-logo.png",
  "description": "A VSCode extension integrating ChatGPT into the editor, powered by OpenAI",
  "version": "1.0.0",
  "aiKey": "",
  "repository": {
    "url": "https://github.com/LifetimeMistake/chatgpt-vscode"
  },
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Data Science",
    "Formatters",
    "Programming Languages",
    "Linters",
    "Machine Learning"
  ],
  "keywords": [
    "gpt-4",
    "openai",
    "codex",
    "chatgpt",
    "code generation",
    "AI in editor",
    "programming help",
    "autonomous coding",
    "AI-powered development",
    "code suggestions",
    "code completion",
    "code refactoring",
    "AI assistant",
    "software engineering",
    "coding assistant"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "menus": {
      "editor/context": [
        {
          "command": "chatgpt-vscode.refactorCode",
          "when": "editorHasSelection && refactorCode-enabled"
        },
        {
          "command": "chatgpt-vscode.findProblems",
          "when": "editorHasSelection && findProblems-enabled"
        },
        {
          "command": "chatgpt-vscode.optimize",
          "when": "editorHasSelection && optimize-enabled"
        },
        {
          "command": "chatgpt-vscode.explain",
          "when": "editorHasSelection && explain-enabled"
        },
        {
          "command": "chatgpt-vscode.addComments",
          "when": "editorHasSelection && addComments-enabled"
        },
        {
          "command": "chatgpt-vscode.completeCode",
          "when": "editorHasSelection && completeCode-enabled"
        },
        {
          "command": "chatgpt-vscode.customPrompt",
          "when": "editorHasSelection && customPrompt-enabled"
        }
      ]
    },
    "commands": [
      {
        "command": "chatgpt-vscode.refactorCode",
        "title": "GPT VSCode: Refactor Code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-vscode.findProblems",
        "title": "GPT VSCode: Debug Code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-vscode.optimize",
        "title": "GPT VSCode: Optimize Code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-vscode.explain",
        "title": "GPT VSCode: Explain Code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-vscode.addComments",
        "title": "GPT VSCode: Add Comments",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-vscode.completeCode",
        "title": "GPT VSCode: Complete Code",
        "enablement": "editorHasSelection"
      },
      {
        "command": "chatgpt-vscode.customPrompt",
        "title": "GPT VSCode: Custom prompt",
        "enablement": "editorHasSelection"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vscode-chatgpt-view-container",
          "title": "GPT VSCode",
          "icon": "images/ai-logo-in.png"
        }
      ]
    },
    "views": {
      "vscode-chatgpt-view-container": [
        {
          "type": "webview",
          "id": "chatgpt-vscode.view",
          "name": "Chat window"
        }
      ]
    },
    "configuration": {
      "title": "GPT VSCode",
      "properties": {
        "chatgpt-vscode.assistantName": {
          "type": "string",
          "default": "GPT VSCode",
          "markdownDescription": "Custom name of the assistant"
        },
        "chatgpt-vscode.authMethod": {
          "type": "string",
          "enum": [
            "OpenAI",
            "Azure"
          ],
          "default": "OpenAI",
          "markdownDescription": "API Provider"
        },
        "chatgpt-vscode.apiKey": {
          "type": "string",
          "markdownDescription": "Azure or OpenAI API Key"
        },
        "chatgpt-vscode.baseUrl": {
          "type": "string",
          "default": "https://api.openai.com/v1",
          "markdownDescription": "(Optional) OpenAI Base URL."
        },
        "chatgpt-vscode.organizationName": {
          "type": "string",
          "markdownDescription": "(Optional) Your OpenAI organization name used to resolve billing"
        },
        "chatgpt-vscode.azureDeploymentUrl": {
          "type": "string",
          "markdownDescription": "`Azure:` Your Azure model deployment URL."
        },
        "chatgpt-vscode.azureApiVersion": {
          "type": "string",
          "enum": [
            "2022-12-01",
            "2023-03-15-preview",
            "2023-05-15",
            "2023-06-01-preview"
          ],
          "default": "2023-05-15",
          "markdownDescription": "(Optional) Azure OpenAI Service REST API version."
        },
        "chatgpt-vscode.model": {
          "type": "string",
          "enum": [
            "gpt-4-1106-preview",
            "gpt-4",
            "gpt-4-0613",
            "gpt-4-32k-0613",
            "gpt-3.5-turbo",
            "gpt-3.5-turbo-0301",
            "gpt-3.5-turbo-0613",
            "gpt-3.5-turbo-16k",
            "gpt-3.5-turbo-16k-0613"
          ],
          "default": "gpt-3.5-turbo",
          "markdownDescription": "OpenAI language model",
          "enumItemLabels": [
            "GPT-4 Turbo 128K",
            "GPT-4 (June 13)",
            "GPT-4 32K (June 13)",
            "GPT-3.5 Turbo",
            "GPT-3.5 Turbo (March 1)",
            "GPT-3.5 Turbo (June 13)",
            "GPT-3.5 Turbo 16k",
            "GPT-3.5 Turbo 16k (June 13)"
          ],
          "markdownEnumDescriptions": [
            "8k GPT-4: More capable than any GPT-3.5 model, able to do more complex tasks.",
            "8k Snapshot of `gpt-4` from June 13th 2023 with function calling data.",
            "32k Snapshot of `gpt-4-32` from June 13th 2023.",
            "4k GPT-3.5 Turbo: Most capable GPT-3.5 model and optimized for chat at 1/10th the cost of `text-davinci-003`.",
            "4k Snapshot of `gpt-3.5-turbo` from March 1st.",
            "4k Snapshot of `gpt-3.5-turbo` from June 13th 2023 with function calling data.",
            "16k version of `gpt-3.5-turbo` with 4 times the context.",
            "16k Snapshot of `gpt-3.5-turbo-16k` from June 13th 2023."
          ]
        },
        "chatgpt-vscode.promptPrefix.refactorCode": {
          "type": "string",
          "default": "Refactor this code to enhance its simplicity and improve readability.",
          "description": "Refactor code prompt."
        },
        "chatgpt-vscode.promptPrefix.enableRefactorCode": {
          "type": "boolean",
          "default": true,
          "description": "Enable the refactor code option in the context menu"
        },
        "chatgpt-vscode.promptPrefix.findProblems": {
          "type": "string",
          "default": "Identify any current or potential future issues in this code.",
          "description": "Find problems prompt."
        },
        "chatgpt-vscode.promptPrefix.enableFindProblems": {
          "type": "boolean",
          "default": true,
          "description": "Enable the find problems option in the context menu"
        },
        "chatgpt-vscode.promptPrefix.optimize": {
          "type": "string",
          "default": "Suggest optimizations for the following code.",
          "description": "Optimize code prompt."
        },
        "chatgpt-vscode.promptPrefix.enableOptimize": {
          "type": "boolean",
          "default": true,
          "description": "Enable the optimize option in the context menu"
        },
        "chatgpt-vscode.promptPrefix.explain": {
          "type": "string",
          "default": "Explain the following code.",
          "description": "Explain code prompt."
        },
        "chatgpt-vscode.promptPrefix.enableExplain": {
          "type": "boolean",
          "default": true,
          "description": "Enable the explain code option in the context menu"
        },
        "chatgpt-vscode.promptPrefix.addComments": {
          "type": "string",
          "default": "Add detailed comments to each block of logic within this code.",
          "description": "Add comments prompt."
        },
        "chatgpt-vscode.promptPrefix.enableAddComments": {
          "type": "boolean",
          "default": true,
          "description": "Enable the add comments option in the context menu"
        },
        "chatgpt-vscode.promptPrefix.completeCode": {
          "type": "string",
          "default": "Complete the following code.",
          "description": "Complete code prompt."
        },
        "chatgpt-vscode.promptPrefix.enableCompleteCode": {
          "type": "boolean",
          "default": true,
          "description": "Enable the complete code option in the context menu"
        },
        "chatgpt-vscode.promptPrefix.enableCustomPrompt": {
          "type": "boolean",
          "default": true,
          "description": "Enable the custom prompt option in the context menu"
        },
        "chatgpt-vscode.temperature": {
          "type": "number",
          "default": 0.1,
          "markdownDescription": "Sets the sampling 'temperature'. Higher values result in riskier outputs, making the model more creative. A value of 0.9 is suggested for creative applications, while 0.1 is for tasks with a well-defined answer."
        },
        "chatgpt-vscode.top_p": {
          "type": "number",
          "default": 0,
          "markdownDescription": "Defines 'nucleus sampling', an alternative to temperature sampling. The model will consider tokens within the top `top_p` probability mass. For instance, 0.1 would consider the top 10% probability tokens."
        },
        "chatgpt-vscode.systemPrompt": {
          "type": "string",
          "default": "You are {name}, a programming assistant. Your key role is to assist users with various tasks. You have the ability to access a range of functionalities provided by a range of plugins integrated into the system you're a part of. You must ensure the code you generate is clean, understandable, and modifiable, while adhering to best practices. Lines starting with '#SYSTEM' are system messages intended to guide you towards a better, context-aware solution. Remember, you are part of a dynamic and extensible system, and tasks you are given may require you to interact with features and functionalities defined by various plugins.",
          "markdownDescription": "Defines the behavior of the language model. Use the {name} argument to replace with assistant name."
        },
        "chatgpt-vscode.maxHistoryMessages": {
          "type": "number",
          "default": 8,
          "markdownDescription": "Limits the model's prompt memory"
        },
        "chatgpt-vscode.samplingMethod": {
          "type": "string",
          "enum": [
            "Temperature",
            "Top_p"
          ],
          "default": "Temperature",
          "markdownDescription": "Defines which sampling method to use on the model."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "rimraf out && npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run -S esbuild-base -- --sourcemap",
    "watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "fmt": "prettier --write \"src/**/*.ts\"&& npm run test -- --fix",
    "test": "eslint src --ext ts && tsc --noEmit",
    "buildview": "sass --watch /webwiev/main.scss /webwiev/main.css"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/jquery": "^3.5.20",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/uuid": "^9.0.4",
    "@types/vscode": "^1.73.0",
    "@types/vscode-webview": "^1.57.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "esbuild": "^0.15.18",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "ts-loader": "^9.4.1",
    "typescript": "^4.9.3"
  },
  "dependencies": {
    "cheerio": "^1.0.0-rc.12",
    "delay": "^5.0.0",
    "events": "^3.3.0",
    "eventsource-parser": "^0.1.0",
    "gpt3-tokenizer": "^1.1.5",
    "highlight.js": "^11.8.0",
    "isomorphic-fetch": "^3.0.0",
    "keyv": "^4.5.2",
    "marked": "^9.1.0",
    "openai": "^4.0.0-beta.6",
    "p-timeout": "^6.1.1",
    "puppeteer": "^19.4.0",
    "puppeteer-extra": "^3.3.4",
    "puppeteer-extra-plugin-stealth": "^2.11.1",
    "puppeteer-extra-plugin-user-data-dir": "^2.4.0",
    "puppeteer-extra-plugin-user-preferences": "^2.4.0",
    "quick-lru": "^6.1.1",
    "remark": "^14.0.2",
    "sass": "^1.68.0",
    "strip-markdown": "^5.0.0",
    "uuid": "^9.0.0"
  },
  "resolutions": {
    "clone-deep": "^4.0.1"
  }
}